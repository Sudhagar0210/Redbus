# Working Code

import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException, ElementClickInterceptedException, StaleElementReferenceException, TimeoutException

driver = webdriver.Chrome()
driver.maximize_window()

driver.get('https://www.redbus.in/')

route_header_page = "https://www.redbus.in/online-booking/ktcl/?utm_source=rtchometile"

time.sleep(5)
driver.find_element(By.XPATH,"//*[@id=\"Carousel\"]/span/span/i").click()

# select State Name
time.sleep(2)
driver.find_element(By.XPATH, "(//div[@class='rtcName'])[4]").click()
driver.implicitly_wait(10)

time.sleep(5)
route_titles = driver.find_elements(By.XPATH, "//a[@class='route']")

time.sleep(10)

def scroll_to_bottom():
    last_height = driver.execute_script("return document.body.scrollHeight")
    while True:
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(5)
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            break
        last_height = new_height

def get_bus_details():
    route_titles = driver.find_elements(By.XPATH, "//*[@id=\"mBWrapper\"]/section/div[1]/ul/li/a")
    bus_details = driver.find_elements(By.XPATH, "//div[@class='clearfix bus-item-details']")

    for route in route_titles:
        route_name = route.text
        route_link = route.get_attribute('href')
        

    for bus in bus_details:
        try:
            bus_name = bus.find_element(By.XPATH, ".//div[contains(@class, 'travels')]").text
            bus_type = bus.find_element(By.XPATH, ".//div[contains(@class, 'bus-type')]").text
            departure_time = bus.find_element(By.XPATH, ".//div[contains(@class, 'dp-time')]").text
            arrival_time = bus.find_element(By.XPATH, ".//div[contains(@class, 'bp-time')]").text
            duration = bus.find_element(By.XPATH, ".//div[contains(@class, 'dur')]").text
            rating = bus.find_element(By.XPATH, ".//div[contains(@class, 'ratings')]").text if bus.find_elements(By.XPATH, ".//div[contains(@class, 'ratings')]") else "N/A"
            fare = bus.find_element(By.XPATH, ".//div[contains(@class, 'fare')]//span").text
            seats_available = bus.find_element(By.XPATH, ".//div[contains(@class, 'seat-left')]").text

            print(f"Route Name: {route_name}")
            print(f"Route link: {route_link}")
            print(f"Bus Name: {bus_name}")
            print(f"Bus Type: {bus_type}")
            print(f"Departure Time: {departure_time}")
            print(f"Arrival Time: {arrival_time}")
            print(f"Duration: {duration}")
            print(f"Rating: {rating}")
            print(f"Fare: {fare}")
            print(f"Seats Available: {seats_available}")
            print("-" * 40)

        except NoSuchElementException as e:
            print(f"Error Fetching Some detaisl: {e}")

def handle_pagination():
    while True:
        get_bus_details()
        try:
            next_button = driver.find_element(By.XPATH, "//a[@class='paginate_button next']")
            if 'disabled' in next_button.get_attribute('class'):
                break
            next_button.click()
            time.sleep(5)
        except NoSuchElementException:
            print("No more pages available.")
            break

route_titles = driver.find_elements(By.XPATH, "//a[@class='route']")
for i in range(len(route_titles)):
    if i < len(route_titles):
        driver.execute_script("arguments[0].scrollIntoView();", route_titles[i])
        driver.execute_script("window.scrollBy(0, -100);")
        time.sleep(2)

        try:
            driver.execute_script("arguments[0].click();", route_titles[i])
        except (ElementClickInterceptedException, NoSuchElementException, StaleElementReferenceException, TimeoutException):
            time.sleep(2)
            driver.execute_script("arguments[0].click();", route_titles[i])

        time.sleep(5)
        scroll_to_bottom()
        handle_pagination()
        driver.get(route_header_page)
        time.sleep(5)
        route_titles = driver.find_elements(By.XPATH, "//a[@class='route']")
    else:
        print("No more route titles available.")

driver.quit()
